@model ComicBookGallery.Models.ComicBook

@{
    ViewBag.Title = Model.DisplayText;
}

<h2>@Model.DisplayText</h2>

<div class="row">
    <div class="col-md-6">
        <div class="well">
            <h5><label>Series Title:</label> @Model.SeriesTitle</h5>
            <h5><label>Issue #:</label> @Model.IssueNumber</h5>
            @* Favorite is a boolean and therefore you have to do some coding to make it false or true *@
            <h5><label>Favorite:</label> @(Model.Favorite ? "Yes" : "No")</h5>
            @* Will only render if artists.Length is greater than 0 *@
            @if (Model.Artists.Length > 0)
            {
                /* This part of the view will only render when the artist array has elements */
                <h5>Artists:</h5>
                <div>
                    <ul>
                        @foreach (var artist in Model.Artists)
                        {
                            <li>@artist.Role: @artist.Name</li>
                        }
                    </ul>
                </div>
            }
        </div>
        <h5>Description:</h5>
        @* For security reasons MVC will escape by default *@
        @* any HTML content that is written to the view. *@
        @* Escaping HTML content prevents the browser from rendering it. *@
        @* To prevent MVC from doing that, we can use the HTML.Raw method *@
        @* to write the value to view. *@
        @* Unfortunately the ViewBag can't see if you miss spell. *@
        <div>@Html.Raw(Model.DescriptionHtml)</div>
    </div>
    <div class="col-md-6">
        <img src="/Images/@Model.CoverImageFileName"
             alt="@Model.DisplayText" class="img-responsive" />
    </div>
</div>
